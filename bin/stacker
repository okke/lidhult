#!/usr/bin/env ruby
# 
# Copyright (c) 2015, Okke van 't Verlaat
#  
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
# 

require_relative '../src/Stacker.rb'


require 'optparse'

if not defined? RT_OPTIONS
  RT_OPTIONS = {} 
end

RT_OPTIONS[:input] = "Stackerfile"

option_parser = OptionParser.new do |opts|
  opts.banner = "Usage: stacker [options]"

  opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
    if v
      RT_OPTIONS[:verbose] = lambda do |line|
        puts line
      end
    end
  end

  opts.on("-d", "--def [DEFINITION]", "use DEFINITION as Stackfile") do |d|
    RT_OPTIONS[:input] = d
  end

end


begin option_parser.parse!
rescue OptionParser::InvalidOption => e
  puts e
  puts option_parser.banner
  exit 1
end

# command = ARGV.shift || "init"

if not File.readable?(RT_OPTIONS[:input])
  STDERR.puts "could not read #{RT_OPTIONS[:input]}"
  abort
end

Stacker.new(File.read(RT_OPTIONS[:input])).create


